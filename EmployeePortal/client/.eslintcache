[{"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\index.js":"1","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\App.js":"2","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\index.js":"3","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\MyProfile.js":"4","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\context\\UserContext.js":"5","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\api\\index.js":"6","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard.js":"7","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\LoginPage.js":"8","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\AddEmployee.js":"9","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Navbar.js":"10","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\NavbarStyles.js":"11","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\employees.js":"12","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\MyProfileStyles.js":"13","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\CommonStyles.js":"14","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\LoginPageStyles.js":"15","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\AddEmployeeStyles.js":"16","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\TabsComponent.js":"17","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\employees.js":"18","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\ListEmployees.js":"19","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\ListEmployeeStyles.js":"20","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\ViewEmployeeModal.js":"21"},{"size":617,"mtime":1610345185626,"results":"22","hashOfConfig":"23"},{"size":2284,"mtime":1610346235140,"results":"24","hashOfConfig":"23"},{"size":124,"mtime":1609931792714,"results":"25","hashOfConfig":"23"},{"size":13611,"mtime":1610345653738,"results":"26","hashOfConfig":"23"},{"size":77,"mtime":1609931792529,"results":"27","hashOfConfig":"23"},{"size":508,"mtime":1610345185342,"results":"28","hashOfConfig":"23"},{"size":341,"mtime":1610021352343,"results":"29","hashOfConfig":"23"},{"size":6187,"mtime":1610345185438,"results":"30","hashOfConfig":"23"},{"size":16735,"mtime":1610344427565,"results":"31","hashOfConfig":"23"},{"size":3947,"mtime":1610345990078,"results":"32","hashOfConfig":"23"},{"size":811,"mtime":1609931792496,"results":"33","hashOfConfig":"23"},{"size":683,"mtime":1610346078763,"results":"34","hashOfConfig":"23"},{"size":860,"mtime":1609931792472,"results":"35","hashOfConfig":"23"},{"size":229,"mtime":1609931792354,"results":"36","hashOfConfig":"23"},{"size":1578,"mtime":1610345185470,"results":"37","hashOfConfig":"23"},{"size":560,"mtime":1610279918747,"results":"38","hashOfConfig":"23"},{"size":3217,"mtime":1610345185532,"results":"39","hashOfConfig":"23"},{"size":1343,"mtime":1610345498952,"results":"40","hashOfConfig":"23"},{"size":6181,"mtime":1610345185407,"results":"41","hashOfConfig":"23"},{"size":1051,"mtime":1610345185391,"results":"42","hashOfConfig":"23"},{"size":1118,"mtime":1610345185548,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e2v588",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\index.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\App.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\index.js",[],["88","89"],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\MyProfile.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\context\\UserContext.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\api\\index.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\LoginPage.js",["90"],"    import React, { useState,useEffect,useContext } from 'react';\r\n    import { AppBar, Toolbar, Typography, Button, Box, \r\n      createMuiTheme,ThemeProvider,Link,Grid  } from \"@material-ui/core\";\r\n    import Mersatlogo from '../images/Mersatlogo.jpg'\r\n    import TextField from '@material-ui/core/TextField';\r\n    import { green} from '@material-ui/core/colors';\r\n    import useStyles from './LoginPageStyles';\r\n    import CssBaseline from '@material-ui/core/CssBaseline';\r\n    import {useDispatch,useSelector} from 'react-redux';\r\n    import { login } from '../actions/employees';\r\n    import _ from 'lodash';   \r\n    import {useHistory} from 'react-router-dom'; \r\n    import UserContext from \"../context/UserContext\";\r\n    import Alert from '@material-ui/lab/Alert';\r\n    \r\n    const theme = createMuiTheme({ \r\n      palette: {\r\n        primary:{\r\n          main: green[900], \r\n        },\r\n      },\r\n    })\r\n\r\n   export default function LoginPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { setEmployeeData } = useContext(UserContext);\r\n    const [loginData, setLoginData] = useState({\r\n      email : '', password : ''\r\n    });\r\n    const [error, seterror] = useState('');\r\n    const [emailRequired, setEmailRequired] = useState('');\r\n    const [passwordRequired, setPasswordRequired] = useState('');\r\n\r\n    const state = useSelector(state => state)\r\n    const loggedIn = _.get(state,'employees.loggedInStatus','');\r\n    const messageStatus = _.get(state,'employees.employee.messages.status','');\r\n   \r\n    useEffect(() => {\r\n      if(loggedIn === 'loggedIn'){\r\n        const token = _.get(state,'employees.employee.token','');\r\n        setEmployeeData({\r\n          token : token,\r\n          employee : _.get(state,'employees.employee','')\r\n        })\r\n        localStorage.setItem(\"auth-token\",token)\r\n        history.push('/dashboard');\r\n      }\r\n      if(messageStatus === '10' || messageStatus === '12' ){\r\n        let errMsg = _.get(state,'employees.employee.messages.message','')\r\n        seterror(errMsg)\r\n      }\r\n      if(messageStatus === '11' ){\r\n        //let successMsg = _.get(state,'employees.employee.messages.message','')\r\n        seterror('')\r\n      }\r\n    }, [loggedIn,messageStatus])\r\n    \r\n    \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        try {\r\n          if(loginData.email === ''){\r\n            setEmailRequired(\"Please enter the email address\");     \r\n          }\r\n          if(loginData.password === ''){\r\n            setPasswordRequired( \"Please enter the password\");\r\n          }\r\n          if(loginData.email !== '' && loginData.password !== ''){\r\n            dispatch( login(loginData));\r\n            clearFieldError();\r\n          } \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n            \r\n    }\r\n   \r\n    useEffect(() => {\r\n      if(loginData.email !== ''){\r\n        setEmailRequired(\"\");   \r\n      }\r\n      if(loginData.password !== ''){\r\n        setPasswordRequired( \"\");\r\n      }\r\n      \r\n    }, [loginData.email, loginData.password])\r\n\r\n    const clearFieldError = () =>{\r\n      setEmailRequired(\"\");   \r\n      setPasswordRequired(\"\");\r\n    }\r\n     \r\n   \r\n       \r\n      return(\r\n      \r\n        <Box  boxShadow={3} className={classes.root}>\r\n          <ThemeProvider theme ={theme}>\r\n            <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n              <Toolbar>\r\n                <img src={Mersatlogo} alt = \"Mersatlogo\" className={classes.logo} />\r\n                <Typography className={classes.title} variant=\"body2\" >\r\n                  EMPLOYEE PORTAL LOGIN\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <CssBaseline/>\r\n          {error && \r\n          <Alert severity=\"error\"> {error} </Alert>  \r\n          }\r\n          <form autoComplete=\"off\" className={classes.form} onSubmit = {handleSubmit} >\r\n            <TextField\r\n              InputProps={{\r\n                  disableUnderline: true,\r\n                  classes: { input: classes.input } \r\n                }}\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"email\"\r\n                placeholder=\"EMAIL ADDRESS\"\r\n                name=\"email\"       \r\n                size=\"small\"\r\n                value={loginData.email}\r\n                \r\n                helperText = {emailRequired}  \r\n                onChange={(e) => (setLoginData({ ...loginData, email : e.target.value}))}\r\n        \r\n              />\r\n              <TextField\r\n              InputProps={{\r\n                  disableUnderline: true,\r\n                  classes: { input: classes.input } \r\n                }}    \r\n                variant=\"filled\"\r\n               \r\n                fullWidth\r\n                size=\"small\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                placeholder=\"PASSWORD\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                helperText = {passwordRequired}\r\n                value={loginData.password}\r\n                onChange={(e) => setLoginData({ ...loginData, password : e.target.value})}\r\n              />\r\n              <Button className ={classes.buttonStyle}\r\n              variant={'contained'} \r\n              fullWidth \r\n              disableElevation\r\n              color={'primary'}\r\n              type=\"submit\"\r\n              >\r\n                LOGIN\r\n              </Button>\r\n              <Grid className ={classes.buttonStyle}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"flex-end\"\r\n                  alignItems=\"center\"\r\n              >\r\n              <Link href=\"#\" variant=\"caption\"> \r\n                    Forgot password\r\n                  </Link>\r\n              </Grid>\r\n              \r\n          </form>\r\n         \r\n         \r\n          </ThemeProvider>\r\n        </Box>\r\n      )\r\n    }\r\n  \r\n","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\AddEmployee.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Navbar.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\NavbarStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\employees.js",["91"],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\MyProfileStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\CommonStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\LoginPageStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\AddEmployeeStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\TabsComponent.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\employees.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\ListEmployees.js",["92","93","94","95","96","97"],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\ListEmployeeStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\ViewEmployeeModal.js",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":59,"column":8,"nodeType":"106","endLine":59,"endColumn":32,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":1,"nodeType":"110","endLine":28,"endColumn":2},{"ruleId":"111","severity":1,"message":"112","line":1,"column":16,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"116","line":3,"column":15,"nodeType":"113","messageId":"114","endLine":3,"endColumn":29},{"ruleId":"111","severity":1,"message":"117","line":14,"column":10,"nodeType":"113","messageId":"114","endLine":14,"endColumn":15},{"ruleId":"111","severity":1,"message":"118","line":17,"column":8,"nodeType":"113","messageId":"114","endLine":17,"endColumn":14},{"ruleId":"111","severity":1,"message":"119","line":57,"column":9,"nodeType":"113","messageId":"114","endLine":57,"endColumn":16},{"ruleId":"111","severity":1,"message":"120","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"121","line":15,"column":7,"nodeType":"113","messageId":"114","endLine":15,"endColumn":22},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'setEmployeeData', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["124"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'createMuiTheme' is defined but never used.","'green' is defined but never used.","'Hidden' is defined but never used.","'history' is assigned a value but never used.","'withStyles' is defined but never used.","'handleClickOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [history, loggedIn, messageStatus, setEmployeeData, state]",{"range":"127","text":"128"},[2263,2287],"[history, loggedIn, messageStatus, setEmployeeData, state]"]
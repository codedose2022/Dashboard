[{"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\index.js":"1","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\App.js":"2","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\index.js":"3","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\context\\UserContext.js":"4","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\api\\index.js":"5","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\employees.js":"6","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\CommonStyles.js":"7","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\employees.js":"8","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\events.js":"9","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\events.js":"10","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\helper.js":"11","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Login\\LoginPage.js":"12","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Login\\LoginPageStyles.js":"13","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\Dashboard.js":"14","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\TabsComponent.js":"15","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\Navbar.js":"16","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\NavbarStyles.js":"17","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ListEmployees.js":"18","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ViewEmployeeModal.js":"19","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ListEmployeeStyles.js":"20","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\EditEmployeeModel.js":"21","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\AddEmployee.js":"22","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\MyProfile.js":"23","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\AddEmployeeStyles.js":"24","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\MyProfileStyles.js":"25","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\EventsPage.js":"26","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\EventPageStyles.js":"27","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\LikeDislikeCommentComponent.js":"28","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\AddEvents.js":"29","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\Constants\\departmentList.js":"30"},{"size":617,"mtime":1610345185626,"results":"31","hashOfConfig":"32"},{"size":2338,"mtime":1610962884255,"results":"33","hashOfConfig":"32"},{"size":163,"mtime":1610883538565,"results":"34","hashOfConfig":"32"},{"size":77,"mtime":1609931792529,"results":"35","hashOfConfig":"32"},{"size":1336,"mtime":1610961131397,"results":"36","hashOfConfig":"32"},{"size":683,"mtime":1610776435490,"results":"37","hashOfConfig":"32"},{"size":229,"mtime":1609931792354,"results":"38","hashOfConfig":"32"},{"size":1393,"mtime":1610883967650,"results":"39","hashOfConfig":"32"},{"size":308,"mtime":1610961131382,"results":"40","hashOfConfig":"32"},{"size":381,"mtime":1610883538533,"results":"41","hashOfConfig":"32"},{"size":187,"mtime":1610961131460,"results":"42","hashOfConfig":"32"},{"size":6118,"mtime":1610887156549,"results":"43","hashOfConfig":"32"},{"size":1578,"mtime":1610886553678,"results":"44","hashOfConfig":"32"},{"size":342,"mtime":1610886719153,"results":"45","hashOfConfig":"32"},{"size":3139,"mtime":1610888554715,"results":"46","hashOfConfig":"32"},{"size":4224,"mtime":1610888285167,"results":"47","hashOfConfig":"32"},{"size":875,"mtime":1610886715332,"results":"48","hashOfConfig":"32"},{"size":6845,"mtime":1610887210210,"results":"49","hashOfConfig":"32"},{"size":1113,"mtime":1610887481455,"results":"50","hashOfConfig":"32"},{"size":1051,"mtime":1610887210538,"results":"51","hashOfConfig":"32"},{"size":995,"mtime":1610887399746,"results":"52","hashOfConfig":"32"},{"size":30564,"mtime":1610963657767,"results":"53","hashOfConfig":"32"},{"size":14794,"mtime":1610958505438,"results":"54","hashOfConfig":"32"},{"size":944,"mtime":1610963527518,"results":"55","hashOfConfig":"32"},{"size":908,"mtime":1610953808545,"results":"56","hashOfConfig":"32"},{"size":4309,"mtime":1610966260468,"results":"57","hashOfConfig":"32"},{"size":2522,"mtime":1610966406431,"results":"58","hashOfConfig":"32"},{"size":723,"mtime":1610888550152,"results":"59","hashOfConfig":"32"},{"size":6639,"mtime":1610965279241,"results":"60","hashOfConfig":"32"},{"size":2069,"mtime":1610889635947,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1e2v588",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\index.js",[],["128","129"],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\App.js",["130","131"],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\index.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\context\\UserContext.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\api\\index.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\employees.js",["132"],"export default (state = [], action)=> {\r\n    switch(action.type)\r\n    {\r\n        case 'LOGIN_STATUS':\r\n            return {\r\n                ...state,\r\n                loggedInStatus: action.payload\r\n            }\r\n        case 'LOGIN':\r\n         return {\r\n                ...state,\r\n                employee: action.payload,\r\n            };\r\n         case 'GET_PROFILE':\r\n         return {\r\n                ...state,\r\n                profile: action.payload,\r\n               \r\n            };\r\n        case 'GET_EMPLOYEES':\r\n          return {\r\n            ...state,\r\n            employeesData: action.payload\r\n          };\r\n        default:\r\n            return {...state};\r\n    }\r\n}","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\CommonStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\employees.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\events.js",["133"],"import * as api from '../api';\r\nimport _ from 'lodash';\r\n\r\n\r\nexport const getEvents = (token,division) => async (dispatch) =>{\r\n  try {\r\n    const {data} = await api.getEvents(token,division);\r\n    dispatch ({type: 'GET_EVENTS', payload: data});\r\n}\r\n catch (error) {  \r\n  console.log(error.message);\r\n }\r\n}\r\n","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\events.js",["134"],"export default (state = [], action)=> {\r\n  switch(action.type)\r\n  {\r\n        case 'GET_EVENTS':\r\n          return {\r\n            ...state,\r\n            events: action.payload\r\n          };\r\n          case 'ADD_EVENTS':\r\n          return {\r\n            ...state,\r\n            events: [...action.payload]\r\n          };\r\n         \r\n      default:\r\n          return {...state};\r\n  }\r\n}","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\helper.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Login\\LoginPage.js",["135"],"    import React, { useState,useEffect,useContext } from 'react';\r\n    import { AppBar, Toolbar, Typography, Button, Box, \r\n            createMuiTheme,ThemeProvider,Link,\r\n            Grid,TextField,CssBaseline } from \"@material-ui/core\";\r\n    import Mersatlogo from '../../images/Mersatlogo.jpg'\r\n    import { green} from '@material-ui/core/colors';\r\n    import useStyles from './LoginPageStyles';\r\n    import {useDispatch,useSelector} from 'react-redux';\r\n    import { login } from '../../actions/employees';\r\n    import _ from 'lodash';   \r\n    import {useHistory} from 'react-router-dom'; \r\n    import UserContext from \"../../context/UserContext\";\r\n    import Alert from '@material-ui/lab/Alert';\r\n    \r\n    const theme = createMuiTheme({ \r\n      palette: {\r\n        primary:{\r\n          main: green[900], \r\n        },\r\n      },\r\n    })\r\n\r\n   export default function LoginPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { setEmployeeData } = useContext(UserContext);\r\n    const [loginData, setLoginData] = useState({\r\n      email : '', password : ''\r\n    });\r\n    const [error, seterror] = useState('');\r\n    const [emailRequired, setEmailRequired] = useState('');\r\n    const [passwordRequired, setPasswordRequired] = useState('');\r\n\r\n    const state = useSelector(state => state)\r\n    const loggedIn = _.get(state,'employees.loggedInStatus','');\r\n    const messageStatus = _.get(state,'employees.employee.messages.status','');\r\n   \r\n    useEffect(() => {\r\n      if(loggedIn === 'loggedIn'){\r\n        const token = _.get(state,'employees.employee.token','');\r\n        setEmployeeData({\r\n          token : token,\r\n          employee : _.get(state,'employees.employee','')\r\n        })\r\n        localStorage.setItem(\"auth-token\",token)\r\n        history.push('/dashboard');\r\n      }\r\n      if(messageStatus === '10' || messageStatus === '12' ){\r\n        let errMsg = _.get(state,'employees.employee.messages.message','')\r\n        seterror(errMsg)\r\n      }\r\n      if(messageStatus === '11' ){\r\n        //let successMsg = _.get(state,'employees.employee.messages.message','')\r\n        seterror('')\r\n      }\r\n    }, [loggedIn,messageStatus])\r\n    \r\n    \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        try {\r\n          if(loginData.email === ''){\r\n            setEmailRequired(\"Please enter the email address\");     \r\n          }\r\n          if(loginData.password === ''){\r\n            setPasswordRequired( \"Please enter the password\");\r\n          }\r\n          if(loginData.email !== '' && loginData.password !== ''){\r\n            dispatch( login(loginData));\r\n            clearFieldError();\r\n          } \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n            \r\n    }\r\n   \r\n    useEffect(() => {\r\n      if(loginData.email !== ''){\r\n        setEmailRequired(\"\");   \r\n      }\r\n      if(loginData.password !== ''){\r\n        setPasswordRequired( \"\");\r\n      }\r\n      \r\n    }, [loginData.email, loginData.password])\r\n\r\n    const clearFieldError = () =>{\r\n      setEmailRequired(\"\");   \r\n      setPasswordRequired(\"\");\r\n    }\r\n     \r\n   \r\n       \r\n      return(\r\n       \r\n        <Box  boxShadow={3} className={classes.root}>\r\n          <ThemeProvider theme ={theme}>\r\n            <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n              <Toolbar>\r\n                <img src={Mersatlogo} alt = \"Mersatlogo\" className={classes.logo} />\r\n                <Typography className={classes.title} variant=\"body2\" >\r\n                  EMPLOYEE PORTAL LOGIN\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <CssBaseline/>\r\n          {error && \r\n          <Alert severity=\"error\"> {error} </Alert>  \r\n          }\r\n          <form autoComplete=\"off\" className={classes.form} onSubmit = {handleSubmit} >\r\n            <TextField\r\n              InputProps={{\r\n                  disableUnderline: true,\r\n                  classes: { input: classes.input } \r\n                }}\r\n                FormHelperTextProps={{\r\n                  className: classes.helperTextColor\r\n                }}\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"email\"\r\n                placeholder=\"EMAIL ADDRESS\"\r\n                name=\"email\"       \r\n                size=\"small\"\r\n                value={loginData.email}\r\n                helperText = {emailRequired}  \r\n                onChange={(e) => (setLoginData({ ...loginData, email : e.target.value}))}\r\n        \r\n              />\r\n              <TextField\r\n              InputProps={{\r\n                  disableUnderline: true,\r\n                  classes: { input: classes.input } \r\n                }}    \r\n                variant=\"filled\"\r\n                FormHelperTextProps={{\r\n                  className: classes.helperTextColor\r\n                }}\r\n                fullWidth\r\n                size=\"small\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                placeholder=\"PASSWORD\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                helperText = {passwordRequired}\r\n                value={loginData.password}\r\n                onChange={(e) => setLoginData({ ...loginData, password : e.target.value})}\r\n              />\r\n              <Button className ={classes.buttonStyle}\r\n              variant={'contained'} \r\n              fullWidth \r\n              disableElevation\r\n              color={'primary'}\r\n              type=\"submit\"\r\n              >\r\n                LOGIN\r\n              </Button>\r\n              <Grid className ={classes.buttonStyle}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"flex-end\"\r\n                  alignItems=\"center\"\r\n              >\r\n              <Link href=\"#\" variant=\"caption\"> \r\n                    Forgot password\r\n                  </Link>\r\n              </Grid>\r\n              \r\n          </form>\r\n         \r\n          </ThemeProvider>\r\n        </Box>\r\n      \r\n      )\r\n    }\r\n  \r\n","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Login\\LoginPageStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\Dashboard.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\TabsComponent.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\Navbar.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\NavbarStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ListEmployees.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ViewEmployeeModal.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ListEmployeeStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\EditEmployeeModel.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\AddEmployee.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\MyProfile.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\AddEmployeeStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\MyProfileStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\EventsPage.js",["136","137","138"],"import React,{ useState,useEffect,useRef} from 'react'\r\nimport useStyles from './EventPageStyles';\r\nimport {Paper,Chip,Box,Typography, \r\n  Grid,IconButton} from '@material-ui/core';\r\nimport wall from '../../images/wall.jpg';\r\nimport LikeDislikeCommentComponent from './LikeDislikeCommentComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useMediaQuery,Button } from \"@material-ui/core\";\r\nimport { useSelector} from 'react-redux';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport _ from 'lodash';\r\nimport AddEvents from './AddEvents';\r\nimport * as helper from '../../helper';\r\n\r\n\r\nexport default function EventsPage() {\r\nconst classes = useStyles();\r\nconst isSmallScreen = useMediaQuery(theme => theme.breakpoints.down(\"xs\"));\r\nconst state = useSelector(state => state);\r\nlet events  =_.get(state,'events.events',[]);\r\nconst isEventsMember  = helper.isEventMember( _.get(state,'employees.employee.userData.division',''));\r\nconst [editButton, setEdit] = useState({\"index\" : {}});\r\nconst [deleteButton, setDelete] = useState({\"index\" : {}});\r\nconst [open, setOpenModel] = useState(false)\r\n\r\nfunction setEditButton(index){\r\n \r\n  setEdit({\"index\" : {\r\n    [index] : true\r\n  }})\r\n}\r\n\r\nfunction setDeleteButton(index){\r\n  setDelete({\"index\" : {\r\n    [index] : true\r\n  }})\r\n\r\n}\r\n  \r\nconst handleAddEventModelOpen = () => {\r\n  setOpenModel(true);\r\n};\r\n\r\n\r\n  return (\r\n    <div className = {classes.root}>\r\n      <Grid container justify=\"flex-end\" >\r\n       {isEventsMember && <Button\r\n      id= 'Add-events-button'\r\n      key= 'Add-events-button_'\r\n      className ={classes.addButtonStyle}\r\n     \r\n      color=\"primary\" \r\n      justify=\"flex-end\"\r\n      variant={isSmallScreen ? 'text'  : 'contained'}\r\n      size = \"small\"\r\n     onClick = {handleAddEventModelOpen}\r\n      startIcon={<AddIcon className={classes.tableCellStyle}/>}> \r\n     Add events\r\n      </Button>}\r\n     {open && <AddEvents setOpenModel = {setOpenModel}/>}\r\n    </Grid>\r\n    {events.map((event,eventIndex) => {\r\n      return (\r\n        <Paper\r\n          className = {classes.paper}\r\n          variant=\"outlined\"\r\n          key = {`event${event._id}`}\r\n         \r\n         >\r\n       <Grid className = {classes.header}>\r\n       <Chip className = {classes.chip}  key = {`status_${event._id}`}\r\n       size=\"small\" label={event.status} color = {event.status === \"Approved\" ? \"primary\" : ''}  />\r\n           {isEventsMember &&  <span>\r\n         <IconButton style = {{ \"background\": \"none\",\"padding\" : \"0px\"}} key = {`iconEditButton${event._id}`} className = {classes.iconVertical}   onClick={()=>setEditButton(eventIndex) }>\r\n     \r\n       <EditIcon color=\"primary\" size=\"small\" />\r\n       </IconButton>\r\n       <IconButton style = {{ \"background\": \"none\"}}  key = {`iconDeleteButton${event._id}`} className = {classes.iconVertical}   onClick={()=>setDeleteButton(eventIndex)}>\r\n       <DeleteIcon color=\"primary\" size=\"small\"  />\r\n       </IconButton>\r\n       </span> }\r\n  \t\t{_.get(editButton,`index.${eventIndex}`, false) && \r\n        <AddEvents setEdit = {setEdit} event = {event} />}\r\n     </Grid>\r\n     <div >\r\n       <Typography key = {`title${event._id}`} className = {classes.marginStyle}>{event.title}\r\n       </Typography>\r\n       <div style={{ width: '100%' }}>\r\n         <Box display=\"flex\" p={1} className = {classes.box}>\r\n         <Box p={1} key = {`date${event._id}`} >\r\n      {event.date && event.date.substring(0,10)}\r\n       \r\n         </Box>\r\n         <Box p={1} key = {`time${event._id}`}  >\r\n         {event.time}\r\n         </Box>\r\n         <Box p={1} key = {`venue${event._id}`} >\r\n         {event.venue}\r\n         </Box>\r\n         </Box>\r\n\r\n         <div  className = {classes.marginStyle}>\r\n           <img\r\n           key = {`img${event._id}`} \r\n           className = {classes.img}\r\n           alt=\"Contemplative Reptile\"\r\n           src={wall}\r\n           title=\"Contemplative Reptile\"\r\n           />\r\n         </div>\r\n         <div style = {{margin:\"12px\"}}>\r\n         <Typography variant = \"caption\" key = {`desc${event._id}`} >\r\n         {event.desc}\r\n         </Typography>\r\n         </div>\r\n         <LikeDislikeCommentComponent/>\r\n       </div>  \r\n       \r\n     </div>\r\n\r\n   </Paper>\r\n\r\n      )\r\n    })\r\n    } \r\n     \r\n    </div>\r\n  )\r\n}\r\n","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\EventPageStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\LikeDislikeCommentComponent.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\AddEvents.js",["139","140"],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\Constants\\departmentList.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":11,"column":24,"nodeType":"147","messageId":"148","endLine":11,"endColumn":34},{"ruleId":"145","severity":1,"message":"149","line":31,"column":13,"nodeType":"147","messageId":"148","endLine":31,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","endLine":28,"endColumn":2},{"ruleId":"145","severity":1,"message":"153","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":9},{"ruleId":"150","severity":1,"message":"151","line":1,"column":1,"nodeType":"152","endLine":18,"endColumn":2},{"ruleId":"154","severity":1,"message":"155","line":58,"column":8,"nodeType":"156","endLine":58,"endColumn":32,"suggestions":"157"},{"ruleId":"145","severity":1,"message":"158","line":1,"column":25,"nodeType":"147","messageId":"148","endLine":1,"endColumn":34},{"ruleId":"145","severity":1,"message":"159","line":1,"column":35,"nodeType":"147","messageId":"148","endLine":1,"endColumn":41},{"ruleId":"145","severity":1,"message":"160","line":24,"column":8,"nodeType":"147","messageId":"148","endLine":24,"endColumn":20},{"ruleId":"145","severity":1,"message":"161","line":3,"column":30,"nodeType":"147","messageId":"148","endLine":3,"endColumn":43},{"ruleId":"145","severity":1,"message":"162","line":70,"column":11,"nodeType":"147","messageId":"148","endLine":70,"endColumn":13},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'getProfile' is defined but never used.","Identifier","unusedVar","'tokenRes' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'_' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'setEmployeeData', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["165"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'deleteButton' is assigned a value but never used.","'DialogContent' is defined but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [history, loggedIn, messageStatus, setEmployeeData, state]",{"range":"168","text":"169"},[2193,2217],"[history, loggedIn, messageStatus, setEmployeeData, state]"]
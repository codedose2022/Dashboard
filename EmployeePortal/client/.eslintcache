[{"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\index.js":"1","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\App.js":"2","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\reducers\\index.js":"3","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\Dashboard.js":"4","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\MyProfile.js":"5","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\LoginPage.js":"6","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\AddEmployee.js":"7","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\context\\UserContext.js":"8","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\Navbar.js":"9","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\api\\index.js":"10","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\NavbarStyles.js":"11","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\reducers\\employees.js":"12","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\CommonStyles.js":"13","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\TabsComponent.js":"14","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\MyProfileStyles.js":"15","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\LoginPageStyles.js":"16","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\AddEmployeeStyles.js":"17","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\actions\\employees.js":"18","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\ListEmployees.js":"19","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\ListEmployeeStyles.js":"20","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\viewEmployeeModal.js":"21","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\ViewEmployeeModal.js":"22"},{"size":617,"mtime":1610265688757,"results":"23","hashOfConfig":"24"},{"size":2284,"mtime":1610025091990,"results":"25","hashOfConfig":"24"},{"size":124,"mtime":1610004299341,"results":"26","hashOfConfig":"24"},{"size":341,"mtime":1610190807734,"results":"27","hashOfConfig":"24"},{"size":14890,"mtime":1610361702104,"results":"28","hashOfConfig":"24"},{"size":6187,"mtime":1610343919407,"results":"29","hashOfConfig":"24"},{"size":16735,"mtime":1610346502389,"results":"30","hashOfConfig":"24"},{"size":77,"mtime":1609939001910,"results":"31","hashOfConfig":"24"},{"size":4362,"mtime":1610373464680,"results":"32","hashOfConfig":"24"},{"size":508,"mtime":1610175347865,"results":"33","hashOfConfig":"24"},{"size":875,"mtime":1610362616007,"results":"34","hashOfConfig":"24"},{"size":683,"mtime":1610346502545,"results":"35","hashOfConfig":"24"},{"size":229,"mtime":1610427027258,"results":"36","hashOfConfig":"24"},{"size":3217,"mtime":1610261071269,"results":"37","hashOfConfig":"24"},{"size":944,"mtime":1610361598491,"results":"38","hashOfConfig":"24"},{"size":1578,"mtime":1610168300392,"results":"39","hashOfConfig":"24"},{"size":560,"mtime":1610346502436,"results":"40","hashOfConfig":"24"},{"size":1343,"mtime":1610346502357,"results":"41","hashOfConfig":"24"},{"size":6181,"mtime":1610341296260,"results":"42","hashOfConfig":"24"},{"size":1051,"mtime":1610274867701,"results":"43","hashOfConfig":"24"},{"size":3125,"mtime":1610276716131,"results":"44","hashOfConfig":"24"},{"size":1406,"mtime":1610353951848,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"pcqfu8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\index.js",[],["96","97"],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\App.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\reducers\\index.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\Dashboard.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\MyProfile.js",["98"],"import React from 'react';\r\nimport useStyles from './MyProfileStyles';\r\nimport {Paper,Container,Grid,TextField,Avatar,Divider,\r\n    Typography,createMuiTheme,responsiveFontSizes,MuiThemeProvider,Button} from '@material-ui/core'; \r\nimport  profile from '../images/profile.jfif';\r\nimport useStyle from './CommonStyles';\r\nimport {Link} from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport {useSelector} from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nexport default function MyProfile(props) {\r\n    const classes = useStyles(); \r\n    const classStyle = useStyle(); \r\n\t  let theme = createMuiTheme();\r\n    theme = responsiveFontSizes(theme);\r\n    const state = useSelector(state => state);\r\n    const employeeProfile = _.get(state,'employees.profile','');\r\n    const profileData = props.employee ? props.employee : employeeProfile;\r\n    let dateOfHire = moment(profileData.dateOfHire).format('Do MMMM YYYY');\r\n    let dob = moment(profileData.dob).format('Do MMMM YYYY');\r\n\t  return (\r\n\t\t<div>\r\n        <div className={!props.employee ? classStyle.topPadding : ''}/>\r\n        { !props.employee && <Link style = {{ textDecoration: 'none'}} to = \"/Dashboard\"><h6 className = {classes.linkStyle} >GO TO DASHBOARD</h6></Link> }\r\n        <div className={classStyle.topPadding}/>\r\n\t\t\t<Container fixed >\r\n\t\t\t<Paper className={classes.root}  elevation={2}>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t<Grid item xs={12} container>\r\n\t\t\t\t\t\t<Grid  item xs={12}>\r\n\t\t\t\t\t \t<Paper className={classes.firstPaper} elevation={5}>\r\n\t\t\t\t\t\t<Container className={classes.container}> \r\n                    \t\t<Avatar src={profile}  className={classes.image} />\r\n\t\t\t\t\t\t\t<MuiThemeProvider theme={theme}>\r\n\t\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t<Grid container spacing={0}>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}> \r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"h6\"  className={classes.typography} >\r\n\t\t\t\t\t\t\t\t\t{profileData.firstName + \" \" + profileData.lastName}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Typography  variant=\"subtitle1\" className={classes.typography1} >\r\n\t\t\t\t\t\t\t\t\t{profileData.employeeCode}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.typography1}>\r\n\t\t\t\t\t\t\t\t\t{profileData.designation}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\t\r\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.typography1}>\r\n\t\t\t\t\t\t\t\t\t{profileData.department}\r\n\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</MuiThemeProvider>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper className={classes.paper} elevation={5}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n\t\t\t\t\t<Typography variant=\"h6\" >Basic Info</Typography>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n\t\t\t\t\t      fullWidth\r\n                    id=\"firstName\"\r\n                    label=\"First Name\"\r\n                   \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                    \r\n                        disableUnderline: true\r\n                        \r\n                    }}\r\n                    variant='filled'\r\n                    value={profileData.firstName}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                 <TextField\r\n\t\t\t\t    fullWidth\r\n                    id=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    \r\n                    InputProps={{\r\n                    readOnly: true,\r\n                    disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.lastName}\r\n                />\r\n                </Grid>\r\n             \r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                   \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.email}\r\n                />\r\n                </Grid>\r\n\t\t\t\t<Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"employeeCode\"\r\n                    label=\"Employee Code\"\r\n                   \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.employeeCode}\r\n                />\r\n                </Grid>\r\n                </Grid>\r\n               \r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n                <Grid item sm={12}>\r\n\t\t\t\t\t<Typography variant=\"h6\" >Work</Typography>\r\n\t\t\t\t\t<Divider  />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"designation\"\r\n                    label=\"Designation\"\r\n                 \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.designation}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                 <TextField\r\n\t\t\t\t fullWidth\r\n                    id=\"department\"\r\n                    label=\"Department\"\r\n                  \r\n                    InputProps={{\r\n                    readOnly: true,\r\n                    disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.department}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"dateOfHire\"\r\n                    label=\"Date of Hire\"\r\n                   \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={dateOfHire}\r\n                />\r\n                </Grid>\r\n               \r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"deskPhone\"\r\n                    label=\"Desk Phone\"\r\n                   \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.deskPhone}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"workMobile\"\r\n                    label=\"Work Mobile\"\r\n                    \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.workMobile}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"employeeStatus\"\r\n                    label=\"Employee Status\"\r\n                   \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.employeeStatus}\r\n                />\r\n                </Grid>\r\n                \r\n                </Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={12}>\r\n\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n                <Grid item sm={12}>\r\n\t\t\t\t\t<Typography variant=\"h6\" >Personal Details</Typography>\r\n\t\t\t\t\t<Divider  />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n                <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"phoneNumber\"\r\n                    label=\"Phone Number\"\r\n                    \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.phoneNumber}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                 <TextField\r\n\t\t\t\t fullWidth\r\n                    id=\"dob\"\r\n                    label=\"Date of Birth\"\r\n                    \r\n                    InputProps={{\r\n                    readOnly: true,\r\n                    disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={dob}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"nationality\"\r\n                    label=\"Nationality\"\r\n                    \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.nationality}\r\n                />\r\n                </Grid>\r\n             \r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"gender\"\r\n                    label=\"Gender\"\r\n                    \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.gender}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"maritalStatus\"\r\n                    label=\"Marital Status\"\r\n                    \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.maritalStatus}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"hobbies\"\r\n                    label=\"Hobbies\"\r\n                    \r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                    value={profileData.hobbies}\r\n                />\r\n                </Grid>\r\n                \r\n                </Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item sm={12}>\r\n\t\t\t\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t\t\t<Grid container spacing={2}>\r\n                <Grid item sm={12}>\r\n\t\t\t\t\t<Typography variant=\"h6\"  >Dependence</Typography>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\r\n                <Grid container spacing={2}>\r\n               \r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                 <TextField\r\n\t\t\t\t fullWidth\r\n                    id=\"dependenceName\"\r\n                    label=\"Name\"\r\n                    defaultValue=\"Ben\"\r\n                    InputProps={{\r\n                    readOnly: true,\r\n                    disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"dependenceRelationship\"\r\n                    label=\"Relationship\"\r\n                    defaultValue=\"Dog\"\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                />\r\n                </Grid>\r\n\t\t\t\t<Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"dependenceDob\"\r\n                    label=\"Date of Birth\"\r\n                    defaultValue=\"12-12-2020\"\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                />\r\n                </Grid>\r\n            \r\n               \r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"dependenceName1\"\r\n                    label=\"Name\"\r\n                    defaultValue=\"Lucy\"\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"dependenceRelationship1\"\r\n                    label=\"Relationship\"\r\n                    defaultValue=\"Cat\"\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                />\r\n                </Grid>\r\n\t\t\t\t<Grid item xs={12} sm={12} md={6} lg={4} xl={4}>\r\n                <TextField\r\n\t\t\t\tfullWidth\r\n                    id=\"dependenceDob1\"\r\n                    label=\"Date of Birth\"\r\n                    defaultValue=\"12-12-2020\"\r\n                    InputProps={{\r\n                        readOnly: true,\r\n                        disableUnderline: true\r\n                    }}\r\n                    variant=\"filled\"\r\n                />\r\n                </Grid>\r\n                \r\n                </Grid>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t\t</Paper>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t  );\r\n  };\r\n  \r\n\r\n","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\LoginPage.js",["99"],"    import React, { useState,useEffect,useContext } from 'react';\r\n    import { AppBar, Toolbar, Typography, Button, Box, \r\n      createMuiTheme,ThemeProvider,Link,Grid } from \"@material-ui/core\";\r\n    import Mersatlogo from '../images/Mersatlogo.jpg'\r\n    import TextField from '@material-ui/core/TextField';\r\n    import { green} from '@material-ui/core/colors';\r\n    import useStyles from './LoginPageStyles';\r\n    import CssBaseline from '@material-ui/core/CssBaseline';\r\n    import {useDispatch,useSelector} from 'react-redux';\r\n    import { login } from '../actions/employees';\r\n    import _ from 'lodash';   \r\n    import {useHistory} from 'react-router-dom'; \r\n    import UserContext from \"../context/UserContext\";\r\n    import Alert from '@material-ui/lab/Alert';\r\n    \r\n    const theme = createMuiTheme({ \r\n      palette: {\r\n        primary:{\r\n          main: green[900], \r\n        },\r\n      },\r\n    })\r\n\r\n   export default function LoginPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { setEmployeeData } = useContext(UserContext);\r\n    const [loginData, setLoginData] = useState({\r\n      email : '', password : ''\r\n    });\r\n    const [error, seterror] = useState('');\r\n    const [emailRequired, setEmailRequired] = useState('');\r\n    const [passwordRequired, setPasswordRequired] = useState('');\r\n\r\n    const state = useSelector(state => state)\r\n    const loggedIn = _.get(state,'employees.loggedInStatus','');\r\n    const messageStatus = _.get(state,'employees.employee.messages.status','');\r\n   \r\n    useEffect(() => {\r\n      if(loggedIn === 'loggedIn'){\r\n        const token = _.get(state,'employees.employee.token','');\r\n        setEmployeeData({\r\n          token : token,\r\n          employee : _.get(state,'employees.employee','')\r\n        })\r\n        localStorage.setItem(\"auth-token\",token)\r\n        history.push('/dashboard');\r\n      }\r\n      if(messageStatus === '10' || messageStatus === '12' ){\r\n        let errMsg = _.get(state,'employees.employee.messages.message','')\r\n        seterror(errMsg)\r\n      }\r\n      if(messageStatus === '11' ){\r\n        //let successMsg = _.get(state,'employees.employee.messages.message','')\r\n        seterror('')\r\n      }\r\n    }, [loggedIn,messageStatus])\r\n    \r\n    \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        try {\r\n          if(loginData.email === ''){\r\n            setEmailRequired(\"Please enter the email address\");     \r\n          }\r\n          if(loginData.password === ''){\r\n            setPasswordRequired( \"Please enter the password\");\r\n          }\r\n          if(loginData.email !== '' && loginData.password !== ''){\r\n            dispatch( login(loginData));\r\n            clearFieldError();\r\n          } \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n            \r\n    }\r\n   \r\n    useEffect(() => {\r\n      if(loginData.email !== ''){\r\n        setEmailRequired(\"\");   \r\n      }\r\n      if(loginData.password !== ''){\r\n        setPasswordRequired( \"\");\r\n      }\r\n      \r\n    }, [loginData.email, loginData.password])\r\n\r\n    const clearFieldError = () =>{\r\n      setEmailRequired(\"\");   \r\n      setPasswordRequired(\"\");\r\n    }\r\n     \r\n   \r\n       \r\n      return(\r\n       \r\n        <Box  boxShadow={3} className={classes.root}>\r\n          <ThemeProvider theme ={theme}>\r\n            <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n              <Toolbar>\r\n                <img src={Mersatlogo} alt = \"Mersatlogo\" className={classes.logo} />\r\n                <Typography className={classes.title} variant=\"body2\" >\r\n                  EMPLOYEE PORTAL LOGIN\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <CssBaseline/>\r\n          {error && \r\n          <Alert severity=\"error\"> {error} </Alert>  \r\n          }\r\n          <form autoComplete=\"off\" className={classes.form} onSubmit = {handleSubmit} >\r\n            <TextField\r\n              InputProps={{\r\n                  disableUnderline: true,\r\n                  classes: { input: classes.input } \r\n                }}\r\n                FormHelperTextProps={{\r\n                  className: classes.helperTextColor\r\n                }}\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"email\"\r\n                placeholder=\"EMAIL ADDRESS\"\r\n                name=\"email\"       \r\n                size=\"small\"\r\n                value={loginData.email}\r\n                helperText = {emailRequired}  \r\n                onChange={(e) => (setLoginData({ ...loginData, email : e.target.value}))}\r\n        \r\n              />\r\n              <TextField\r\n              InputProps={{\r\n                  disableUnderline: true,\r\n                  classes: { input: classes.input } \r\n                }}    \r\n                variant=\"filled\"\r\n                FormHelperTextProps={{\r\n                  className: classes.helperTextColor\r\n                }}\r\n                fullWidth\r\n                size=\"small\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                placeholder=\"PASSWORD\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                helperText = {passwordRequired}\r\n                value={loginData.password}\r\n                onChange={(e) => setLoginData({ ...loginData, password : e.target.value})}\r\n              />\r\n              <Button className ={classes.buttonStyle}\r\n              variant={'contained'} \r\n              fullWidth \r\n              disableElevation\r\n              color={'primary'}\r\n              type=\"submit\"\r\n              >\r\n                LOGIN\r\n              </Button>\r\n              <Grid className ={classes.buttonStyle}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"flex-end\"\r\n                  alignItems=\"center\"\r\n              >\r\n              <Link href=\"#\" variant=\"caption\"> \r\n                    Forgot password\r\n                  </Link>\r\n              </Grid>\r\n              \r\n          </form>\r\n         \r\n          </ThemeProvider>\r\n        </Box>\r\n      \r\n      )\r\n    }\r\n  \r\n","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\AddEmployee.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\context\\UserContext.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\Navbar.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\api\\index.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\NavbarStyles.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\reducers\\employees.js",["100"],"export default (state = [], action)=> {\r\n    switch(action.type)\r\n    {\r\n        case 'LOGIN_STATUS':\r\n            return {\r\n                ...state,\r\n                loggedInStatus: action.payload\r\n            }\r\n        case 'LOGIN':\r\n         return {\r\n                ...state,\r\n                employee: action.payload,\r\n            };\r\n         case 'GET_PROFILE':\r\n         return {\r\n                ...state,\r\n                profile: action.payload,\r\n               \r\n            };\r\n        case 'GET_EMPLOYEES':\r\n          return {\r\n            ...state,\r\n            employeesData: action.payload\r\n          };\r\n        default:\r\n            return {...state};\r\n    }\r\n}","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\CommonStyles.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\TabsComponent.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\MyProfileStyles.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\LoginPageStyles.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\AddEmployeeStyles.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\actions\\employees.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\ListEmployees.js",["101","102","103","104","105","106"],"import React, {useEffect,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Paper,createMuiTheme,Link} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useSelector} from 'react-redux';\r\nimport useStyles from './ListEmployeeStyles';\r\nimport _ from 'lodash';\r\nimport { green} from '@material-ui/core/colors';\r\nimport {Button,Grid} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport ViewEmployeeModel from './ViewEmployeeModal';\r\n\r\n\r\nconst columns = [\r\n  { id: 'firstName', label: 'First Name', minWidth: 170},\r\n  { id: 'lastName', label: 'Last Name', minWidth: 170},\r\n  { id: 'employeeCode', label: 'Employee Code', minWidth: 100 },\r\n  {\r\n    id: 'department',\r\n    label: 'Department',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'designation',\r\n    label: 'Designation',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  \r\n  },\r\n  {\r\n    id: 'division',\r\n    label: 'Division',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  },\r\n  {\r\n    id: 'actions',\r\n    label: 'Actions',\r\n    minWidth: 170,\r\n    align: 'right',\r\n  }\r\n];\r\n\r\n\r\nexport default function ListEmployees() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const state = useSelector(state => state);\r\n  let employeeInfo  =_.get(state,'employees.employeesData',[]);\r\n  const isSmallScreen = useMediaQuery(theme => theme.breakpoints.down(\"xs\"));\r\n  const [showViewModel, setShowViewModel] = useState({\"index\" : {}});\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  function viewProfile(employee,index){\r\n    console.log(index)\r\n    setShowViewModel({\"index\" : {\r\n      [index] : true\r\n    }})\r\n  }\r\n\r\n  function editProfile(employee){\r\n\r\n  }\r\n\r\n  return (\r\n   \r\n    <div>\r\n    <Grid container justify=\"flex-end\">\r\n      \r\n    <Button\r\n      className ={classes.addButtonStyle}\r\n      href=\"#text-buttons\"\r\n      color=\"primary\" \r\n      justify=\"flex-end\"\r\n      variant={isSmallScreen ? 'text'  : 'contained'}\r\n      size = \"small\"\r\n      startIcon={<AddIcon className={classes.tableCellStyle}/>}> \r\n      Add new employee\r\n    </Button>\r\n   \r\n    </Grid>\r\n    <Paper className={classes.root}  >\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" className = {classes.tableBorder}>\r\n          <TableHead >\r\n            <TableRow  >\r\n              {columns.map((column,index) => (\r\n                <TableCell\r\n                  style = {{borderBottom: '1px solid #1b5e20'}}\r\n                  key={ `${index}_${column.id}`}\r\n                  align='left'\r\n                  className = {classes.tableHeadStyle}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody >\r\n            {employeeInfo.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((employee,employeeIndex) => {\r\n            \r\n             return (\r\n                <TableRow  hover role=\"checkbox\" tabIndex={-1} key={employee._id}>\r\n                  {columns.map((column,index) => {\r\n                    const value = employee[column.id];\r\n                    return (\r\n                      <TableCell \r\n                      style = {{borderBottom: '1px solid green'}} \r\n                      className = {classes.tableCellStyle} \r\n                      key={ `${employeeIndex}_${column.id}`} \r\n                      align='left'>\r\n                         {column.id === 'actions' ? \r\n                         <div>\r\n                           <Link \r\n                            key={ `${employeeIndex}_link`} \r\n                            id={ `${employeeIndex}_link`} \r\n                            href = \"#\" \r\n                            style = {{color: 'green'}} \r\n                            onClick={() => viewProfile(employee,employeeIndex)}>\r\n                           View \r\n                            </Link> &nbsp; \r\n                            <Link \r\n                            style = {{color: 'green'}}\r\n                            href=\"#\" onClick={() => editProfile(employee)}>\r\n                            Edit </Link>\r\n                            {_.get(showViewModel,`index.${employeeIndex}`, false) &&  <ViewEmployeeModel setShowViewModel = {setShowViewModel} employee = {employee}/>}\r\n                          </div>\r\n                         : value\r\n                        \r\n                         \r\n                         }\r\n                    </TableCell>\r\n                        \r\n                    );\r\n                    \r\n                  })}\r\n                </TableRow>\r\n              );\r\n             \r\n            })\r\n          \r\n            }\r\n          </TableBody>\r\n        \r\n        </Table>\r\n\r\n            <TablePagination\r\n            className = {classes.tableBorderStyle}\r\n            rowsPerPageOptions={[10,100]}\r\n            component=\"div\"\r\n            count={employeeInfo.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            classes={{\r\n              caption: classes.caption,\r\n             \r\n              select: classes.caption,\r\n              actions:classes.caption\r\n            }}\r\n           \r\n            />\r\n            </TableContainer>\r\n      \r\n    </Paper>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\ListEmployeeStyles.js",[],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\viewEmployeeModal.js",["107"],"Z:\\working_dir\\portal\\EmployeePortal\\client\\src\\components\\ViewEmployeeModal.js",["108","109"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport MyProfile from './MyProfile';\r\nimport useStyles from './ListEmployeeStyles';\r\n\r\nexport default function ViewEmployeeModel(props) {\r\n  const classes = useStyles();\r\nconst [open, setOpen] = React.useState(true);\r\n\r\nconst handleClickOpen = () => {\r\n  setOpen(true);\r\n};\r\n\r\nconst handleClose = () => {\r\n  setOpen(false);\r\n  props.setShowViewModel(false);\r\n};\r\n  return (\r\n    <div>\r\n      <Dialog\r\n       open={open} \r\n       onClose={handleClose}\r\n       aria-labelledby=\"form-dialog-title\" \r\n       disableBackdropClick \r\n         >\r\n        <DialogTitle \r\n        id=\"form-dialog-title\" \r\n       \r\n        style = {{alignSelf:  'center' }}>\r\n        View Employee\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <MyProfile employee = {props.employee}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button className = {classes.addButtonStyle} variant= 'contained' onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":4,"column":68,"nodeType":"116","messageId":"117","endLine":4,"endColumn":74},{"ruleId":"118","severity":1,"message":"119","line":59,"column":8,"nodeType":"120","endLine":59,"endColumn":32,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":1,"column":1,"nodeType":"124","endLine":28,"endColumn":2},{"ruleId":"114","severity":1,"message":"125","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"126","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":20},{"ruleId":"114","severity":1,"message":"127","line":3,"column":15,"nodeType":"116","messageId":"117","endLine":3,"endColumn":29},{"ruleId":"114","severity":1,"message":"128","line":14,"column":10,"nodeType":"116","messageId":"117","endLine":14,"endColumn":15},{"ruleId":"114","severity":1,"message":"129","line":17,"column":8,"nodeType":"116","messageId":"117","endLine":17,"endColumn":14},{"ruleId":"114","severity":1,"message":"130","line":57,"column":9,"nodeType":"116","messageId":"117","endLine":57,"endColumn":16},{"ruleId":"131","severity":2,"message":"132","line":53,"column":27,"nodeType":"133","endLine":53,"endColumn":41},{"ruleId":"114","severity":1,"message":"134","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":20},{"ruleId":"114","severity":1,"message":"135","line":15,"column":7,"nodeType":"116","messageId":"117","endLine":15,"endColumn":22},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'setEmployeeData', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["138"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'createMuiTheme' is defined but never used.","'green' is defined but never used.","'Hidden' is defined but never used.","'history' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"React.useState\" is called in function \"viewEmployeeModel\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","MemberExpression","'withStyles' is defined but never used.","'handleClickOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [history, loggedIn, messageStatus, setEmployeeData, state]",{"range":"141","text":"142"},[2262,2286],"[history, loggedIn, messageStatus, setEmployeeData, state]"]
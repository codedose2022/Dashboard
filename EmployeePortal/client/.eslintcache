[{"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\index.js":"1","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\App.js":"2","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\index.js":"3","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\context\\UserContext.js":"4","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\api\\index.js":"5","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\employees.js":"6","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\CommonStyles.js":"7","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\employees.js":"8","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\events.js":"9","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\events.js":"10","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\helper.js":"11","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Login\\LoginPage.js":"12","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Login\\LoginPageStyles.js":"13","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\Dashboard.js":"14","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\TabsComponent.js":"15","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\Navbar.js":"16","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\NavbarStyles.js":"17","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ListEmployees.js":"18","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ViewEmployeeModal.js":"19","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ListEmployeeStyles.js":"20","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\EditEmployeeModel.js":"21","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\AddEmployee.js":"22","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\MyProfile.js":"23","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\AddEmployeeStyles.js":"24","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\MyProfileStyles.js":"25","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\EventsPage.js":"26","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\EventPageStyles.js":"27","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\LikeDislikeCommentComponent.js":"28","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\AddEvents.js":"29","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\Constants\\departmentList.js":"30"},{"size":617,"mtime":1610345185626,"results":"31","hashOfConfig":"32"},{"size":2348,"mtime":1610888093135,"results":"33","hashOfConfig":"32"},{"size":163,"mtime":1610883538565,"results":"34","hashOfConfig":"32"},{"size":77,"mtime":1609931792529,"results":"35","hashOfConfig":"32"},{"size":1214,"mtime":1610883908386,"results":"36","hashOfConfig":"32"},{"size":683,"mtime":1610776435490,"results":"37","hashOfConfig":"32"},{"size":229,"mtime":1609931792354,"results":"38","hashOfConfig":"32"},{"size":1393,"mtime":1610883967650,"results":"39","hashOfConfig":"32"},{"size":690,"mtime":1610883538344,"results":"40","hashOfConfig":"32"},{"size":381,"mtime":1610883538533,"results":"41","hashOfConfig":"32"},{"size":106,"mtime":1610883538439,"results":"42","hashOfConfig":"32"},{"size":6118,"mtime":1610887156549,"results":"43","hashOfConfig":"32"},{"size":1578,"mtime":1610886553678,"results":"44","hashOfConfig":"32"},{"size":342,"mtime":1610886719153,"results":"45","hashOfConfig":"32"},{"size":3139,"mtime":1610888554715,"results":"46","hashOfConfig":"32"},{"size":4224,"mtime":1610888285167,"results":"47","hashOfConfig":"32"},{"size":875,"mtime":1610886715332,"results":"48","hashOfConfig":"32"},{"size":6845,"mtime":1610887210210,"results":"49","hashOfConfig":"32"},{"size":1113,"mtime":1610887481455,"results":"50","hashOfConfig":"32"},{"size":1051,"mtime":1610887210538,"results":"51","hashOfConfig":"32"},{"size":995,"mtime":1610887399746,"results":"52","hashOfConfig":"32"},{"size":29586,"mtime":1610951654155,"results":"53","hashOfConfig":"32"},{"size":14349,"mtime":1610890427352,"results":"54","hashOfConfig":"32"},{"size":943,"mtime":1610887209702,"results":"55","hashOfConfig":"32"},{"size":939,"mtime":1610887211174,"results":"56","hashOfConfig":"32"},{"size":4001,"mtime":1610888717950,"results":"57","hashOfConfig":"32"},{"size":2522,"mtime":1610888549478,"results":"58","hashOfConfig":"32"},{"size":723,"mtime":1610888550152,"results":"59","hashOfConfig":"32"},{"size":5813,"mtime":1610888777016,"results":"60","hashOfConfig":"32"},{"size":2069,"mtime":1610889635947,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1e2v588",{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\index.js",[],["130","131"],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\App.js",["132","133"],"import React, { useEffect, useState } from 'react';\r\nimport LoginPage from './components/Login/LoginPage';\r\nimport Dashboard from './components/Dashboard/Dashboard';\r\nimport {BrowserRouter as Router, Route,Switch,Redirect} from 'react-router-dom';\r\nimport MyProfile from './components/Employees/MyProfile';\r\nimport AddEmployee from './components/Employees/AddEmployee';\r\nimport Navbar from './components/Dashboard/Navbar';\r\nimport _ from 'lodash'; \r\nimport {useSelector} from 'react-redux';\r\nimport UserContext from './context/UserContext';\r\nimport { isTokenValid, getProfile } from './api/index';\r\n \r\n\r\nconst App = () =>{\r\n \r\n  const state = useSelector(state => state);\r\n  const loggedIn = _.get(state,'employees.loggedInStatus','');\r\n  const [employeeData, setEmployeeData] = useState({\r\n     token:'',\r\n     employee:''   \r\n  });\r\n \r\n\r\n  useEffect(() => {\r\n  \r\n    const checkloggedIn = async() =>{\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if(token === null){\r\n        localStorage.setItem('auth-token', \"\");\r\n        token = \"\";\r\n      }\r\n      const tokenRes = await isTokenValid(token);\r\n      //on logout set it to empty\r\n      // if(tokenRes){\r\n      //   const employeeDetail = await getProfile(token);\r\n      //   setEmployeeData({\r\n      //     token,\r\n      //     employee : employeeDetail.data});        \r\n      // }\r\n    }\r\n    checkloggedIn();\r\n  }, []);\r\n\r\n  function PrivateRoute({children,...rest}){\r\n    return(\r\n      <Route {...rest} render={() =>{\r\n            return loggedIn && employeeData.employee\r\n            ? children \r\n            : <Redirect to='/login'/>\r\n\r\n      }} />\r\n    )\r\n  }\r\n\r\n  return(\r\n    \r\n    <Router>\r\n      <UserContext.Provider value ={{employeeData, setEmployeeData}}>\r\n      { loggedIn && employeeData.employee && <Navbar/>}\r\n    \r\n      <Route  path=\"/login\" component={LoginPage} />\r\n     \r\n      <main>\r\n      \r\n      <Switch>\r\n          <PrivateRoute exact path=\"/dashboard\"  > \r\n          <Dashboard/>\r\n          </PrivateRoute>\r\n\r\n          <PrivateRoute exact path=\"/profile\"  > \r\n          <MyProfile/>\r\n          </PrivateRoute>\r\n\r\n          <PrivateRoute exact path=\"/addEmployee\"  > \r\n          <AddEmployee/>\r\n          </PrivateRoute>\r\n\r\n        </Switch> \r\n      </main>\r\n       \r\n\r\n      </UserContext.Provider>\r\n    </Router>\r\n  )\r\n}\r\n\r\n\r\nexport default App;","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\index.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\context\\UserContext.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\api\\index.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\employees.js",["134"],"export default (state = [], action)=> {\r\n    switch(action.type)\r\n    {\r\n        case 'LOGIN_STATUS':\r\n            return {\r\n                ...state,\r\n                loggedInStatus: action.payload\r\n            }\r\n        case 'LOGIN':\r\n         return {\r\n                ...state,\r\n                employee: action.payload,\r\n            };\r\n         case 'GET_PROFILE':\r\n         return {\r\n                ...state,\r\n                profile: action.payload,\r\n               \r\n            };\r\n        case 'GET_EMPLOYEES':\r\n          return {\r\n            ...state,\r\n            employeesData: action.payload\r\n          };\r\n        default:\r\n            return {...state};\r\n    }\r\n}","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\CommonStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\employees.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\actions\\events.js",["135"],"import * as api from '../api';\r\nimport _ from 'lodash';\r\n\r\n\r\nexport const getEvents = (token,division) => async (dispatch) =>{\r\n  try {\r\n    const {data} = await api.getEvents(token,division);\r\n    dispatch ({type: 'GET_EVENTS', payload: data});\r\n}\r\n catch (error) {  \r\n  console.log(error.message);\r\n }\r\n}\r\n\r\nexport const addEvents = (token,event) => async () =>{\r\n \r\n  try {\r\n    console.log(event)\r\n    const {data} = await api.addEvent(token,event);\r\n    console.log(data)\r\n   // setServiceError(data.responseData.events);\r\n   // dispatch ({type: 'ADD_EVENTS', payload: data.responseData.events});\r\n}\r\n catch (error) {  \r\n  console.log(error.message);\r\n  //setServiceError(\"hi\");\r\n }\r\n}","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\reducers\\events.js",["136"],"export default (state = [], action)=> {\r\n  switch(action.type)\r\n  {\r\n        case 'GET_EVENTS':\r\n          return {\r\n            ...state,\r\n            events: action.payload\r\n          };\r\n          case 'ADD_EVENTS':\r\n          return {\r\n            ...state,\r\n            events: [...action.payload]\r\n          };\r\n         \r\n      default:\r\n          return {...state};\r\n  }\r\n}","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\helper.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Login\\LoginPage.js",["137"],"    import React, { useState,useEffect,useContext } from 'react';\r\n    import { AppBar, Toolbar, Typography, Button, Box, \r\n            createMuiTheme,ThemeProvider,Link,\r\n            Grid,TextField,CssBaseline } from \"@material-ui/core\";\r\n    import Mersatlogo from '../../images/Mersatlogo.jpg'\r\n    import { green} from '@material-ui/core/colors';\r\n    import useStyles from './LoginPageStyles';\r\n    import {useDispatch,useSelector} from 'react-redux';\r\n    import { login } from '../../actions/employees';\r\n    import _ from 'lodash';   \r\n    import {useHistory} from 'react-router-dom'; \r\n    import UserContext from \"../../context/UserContext\";\r\n    import Alert from '@material-ui/lab/Alert';\r\n    \r\n    const theme = createMuiTheme({ \r\n      palette: {\r\n        primary:{\r\n          main: green[900], \r\n        },\r\n      },\r\n    })\r\n\r\n   export default function LoginPage() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const { setEmployeeData } = useContext(UserContext);\r\n    const [loginData, setLoginData] = useState({\r\n      email : '', password : ''\r\n    });\r\n    const [error, seterror] = useState('');\r\n    const [emailRequired, setEmailRequired] = useState('');\r\n    const [passwordRequired, setPasswordRequired] = useState('');\r\n\r\n    const state = useSelector(state => state)\r\n    const loggedIn = _.get(state,'employees.loggedInStatus','');\r\n    const messageStatus = _.get(state,'employees.employee.messages.status','');\r\n   \r\n    useEffect(() => {\r\n      if(loggedIn === 'loggedIn'){\r\n        const token = _.get(state,'employees.employee.token','');\r\n        setEmployeeData({\r\n          token : token,\r\n          employee : _.get(state,'employees.employee','')\r\n        })\r\n        localStorage.setItem(\"auth-token\",token)\r\n        history.push('/dashboard');\r\n      }\r\n      if(messageStatus === '10' || messageStatus === '12' ){\r\n        let errMsg = _.get(state,'employees.employee.messages.message','')\r\n        seterror(errMsg)\r\n      }\r\n      if(messageStatus === '11' ){\r\n        //let successMsg = _.get(state,'employees.employee.messages.message','')\r\n        seterror('')\r\n      }\r\n    }, [loggedIn,messageStatus])\r\n    \r\n    \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        try {\r\n          if(loginData.email === ''){\r\n            setEmailRequired(\"Please enter the email address\");     \r\n          }\r\n          if(loginData.password === ''){\r\n            setPasswordRequired( \"Please enter the password\");\r\n          }\r\n          if(loginData.email !== '' && loginData.password !== ''){\r\n            dispatch( login(loginData));\r\n            clearFieldError();\r\n          } \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n            \r\n    }\r\n   \r\n    useEffect(() => {\r\n      if(loginData.email !== ''){\r\n        setEmailRequired(\"\");   \r\n      }\r\n      if(loginData.password !== ''){\r\n        setPasswordRequired( \"\");\r\n      }\r\n      \r\n    }, [loginData.email, loginData.password])\r\n\r\n    const clearFieldError = () =>{\r\n      setEmailRequired(\"\");   \r\n      setPasswordRequired(\"\");\r\n    }\r\n     \r\n   \r\n       \r\n      return(\r\n       \r\n        <Box  boxShadow={3} className={classes.root}>\r\n          <ThemeProvider theme ={theme}>\r\n            <AppBar position=\"static\" className={classes.appbar} elevation={0}>\r\n              <Toolbar>\r\n                <img src={Mersatlogo} alt = \"Mersatlogo\" className={classes.logo} />\r\n                <Typography className={classes.title} variant=\"body2\" >\r\n                  EMPLOYEE PORTAL LOGIN\r\n                </Typography>\r\n              </Toolbar>\r\n            </AppBar>\r\n            <CssBaseline/>\r\n          {error && \r\n          <Alert severity=\"error\"> {error} </Alert>  \r\n          }\r\n          <form autoComplete=\"off\" className={classes.form} onSubmit = {handleSubmit} >\r\n            <TextField\r\n              InputProps={{\r\n                  disableUnderline: true,\r\n                  classes: { input: classes.input } \r\n                }}\r\n                FormHelperTextProps={{\r\n                  className: classes.helperTextColor\r\n                }}\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"email\"\r\n                placeholder=\"EMAIL ADDRESS\"\r\n                name=\"email\"       \r\n                size=\"small\"\r\n                value={loginData.email}\r\n                helperText = {emailRequired}  \r\n                onChange={(e) => (setLoginData({ ...loginData, email : e.target.value}))}\r\n        \r\n              />\r\n              <TextField\r\n              InputProps={{\r\n                  disableUnderline: true,\r\n                  classes: { input: classes.input } \r\n                }}    \r\n                variant=\"filled\"\r\n                FormHelperTextProps={{\r\n                  className: classes.helperTextColor\r\n                }}\r\n                fullWidth\r\n                size=\"small\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                placeholder=\"PASSWORD\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                helperText = {passwordRequired}\r\n                value={loginData.password}\r\n                onChange={(e) => setLoginData({ ...loginData, password : e.target.value})}\r\n              />\r\n              <Button className ={classes.buttonStyle}\r\n              variant={'contained'} \r\n              fullWidth \r\n              disableElevation\r\n              color={'primary'}\r\n              type=\"submit\"\r\n              >\r\n                LOGIN\r\n              </Button>\r\n              <Grid className ={classes.buttonStyle}\r\n                  container\r\n                  direction=\"row\"\r\n                  justify=\"flex-end\"\r\n                  alignItems=\"center\"\r\n              >\r\n              <Link href=\"#\" variant=\"caption\"> \r\n                    Forgot password\r\n                  </Link>\r\n              </Grid>\r\n              \r\n          </form>\r\n         \r\n          </ThemeProvider>\r\n        </Box>\r\n      \r\n      )\r\n    }\r\n  \r\n","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Login\\LoginPageStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\Dashboard.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\TabsComponent.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\Navbar.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Dashboard\\NavbarStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ListEmployees.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ViewEmployeeModal.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\ListEmployeeStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\EditEmployeeModel.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\AddEmployee.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\MyProfile.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\AddEmployeeStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\MyProfileStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\EventsPage.js",["138","139","140","141"],"import React,{ useState,useEffect,useRef} from 'react'\r\nimport useStyles from './EventPageStyles';\r\nimport {Paper,Chip,Box,Typography, \r\n  Grid,IconButton} from '@material-ui/core';\r\nimport wall from '../../images/wall.jpg';\r\nimport LikeDislikeCommentComponent from './LikeDislikeCommentComponent';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useMediaQuery,Button } from \"@material-ui/core\";\r\nimport { useSelector} from 'react-redux';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport _ from 'lodash';\r\nimport AddEvents from './AddEvents';\r\n\r\n\r\nexport default function EventsPage() {\r\nconst classes = useStyles();\r\nconst isSmallScreen = useMediaQuery(theme => theme.breakpoints.down(\"xs\"));\r\nconst state = useSelector(state => state);\r\nlet events  =_.get(state,'events.events',[]);\r\nconst [editButton, setEdit] = useState({\"index\" : {}});\r\nconst [deleteButton, setDelete] = useState({\"index\" : {}});\r\nconst [open, setOpenModel] = useState(false)\r\n\r\nfunction setEditButton(index){\r\n \r\n  setEdit({\"index\" : {\r\n    [index] : true\r\n  }})\r\n}\r\n\r\nfunction setDeleteButton(index){\r\n  setDelete({\"index\" : {\r\n    [index] : true\r\n  }})\r\n\r\n}\r\n  \r\nconst handleAddEventModelOpen = () => {\r\n  setOpenModel(true);\r\n};\r\n\r\n\r\n  return (\r\n    <div className = {classes.root}>\r\n      <Grid container justify=\"flex-end\" >\r\n      <Button\r\n      id= 'Add-events-button'\r\n      key= 'Add-events-button_'\r\n      className ={classes.addButtonStyle}\r\n     \r\n      color=\"primary\" \r\n      justify=\"flex-end\"\r\n      variant={isSmallScreen ? 'text'  : 'contained'}\r\n      size = \"small\"\r\n     onClick = {handleAddEventModelOpen}\r\n      startIcon={<AddIcon className={classes.tableCellStyle}/>}> \r\n     Add events\r\n      </Button>\r\n     {open && <AddEvents setOpenModel = {setOpenModel}/>}\r\n    </Grid>\r\n    {events.map((event,eventIndex) => {\r\n      return (\r\n        <Paper\r\n          className = {classes.paper}\r\n          variant=\"outlined\"\r\n          key = {`event${event._id}`}\r\n         \r\n         >\r\n       <Grid className = {classes.header}>\r\n       <Chip className = {classes.chip}  key = {`status_${event._id}`}\r\n       size=\"small\" label={event.status} color = {event.status === \"Approved\" ? \"primary\" : ''}  />\r\n         <span>\r\n        <IconButton style = {{ \"background\": \"none\",\"padding\" : \"0px\"}} key = {`iconEditButton${event._id}`} className = {classes.iconVertical}   onClick={()=>setEditButton(eventIndex) }>\r\n     \r\n       <EditIcon color=\"primary\" size=\"small\" />\r\n       </IconButton>\r\n       <IconButton style = {{ \"background\": \"none\"}}  key = {`iconDeleteButton${event._id}`} className = {classes.iconVertical}   onClick={()=>setDeleteButton(eventIndex)}>\r\n       <DeleteIcon color=\"primary\" size=\"small\"  />\r\n       </IconButton>\r\n       </span>\r\n     </Grid>\r\n     <div >\r\n       <Typography key = {`title${event._id}`} className = {classes.marginStyle}>{event.title}\r\n       </Typography>\r\n       <div style={{ width: '100%' }}>\r\n         <Box display=\"flex\" p={1} className = {classes.box}>\r\n         <Box p={1} key = {`date${event._id}`} >\r\n      {event.date && event.date.substring(0,10)}\r\n       \r\n         </Box>\r\n         <Box p={1} key = {`time${event._id}`}  >\r\n         {event.time}\r\n         </Box>\r\n         <Box p={1} key = {`venue${event._id}`} >\r\n         {event.venue}\r\n         </Box>\r\n         </Box>\r\n\r\n         <div  className = {classes.marginStyle}>\r\n           <img\r\n           key = {`img${event._id}`} \r\n           className = {classes.img}\r\n           alt=\"Contemplative Reptile\"\r\n           src={wall}\r\n           title=\"Contemplative Reptile\"\r\n           />\r\n         </div>\r\n         <div style = {{margin:\"12px\"}}>\r\n         <Typography variant = \"caption\" key = {`desc${event._id}`} >\r\n         {event.desc}\r\n         </Typography>\r\n         </div>\r\n         <LikeDislikeCommentComponent/>\r\n       </div>  \r\n       \r\n     </div>\r\n\r\n   </Paper>\r\n\r\n      )\r\n    })\r\n    } \r\n     \r\n    </div>\r\n  )\r\n}\r\n","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\EventPageStyles.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\LikeDislikeCommentComponent.js",[],"H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Events\\AddEvents.js",["142","143"],"import React,{useState} from 'react'\r\nimport useStyles from './EventPageStyles';\r\nimport {Dialog,DialogActions,DialogContent,\r\n      DialogTitle} from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux';\r\nimport {validateRequired} from '../../helper';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport * as api from '../../api'; \r\nimport _ from 'lodash'; \r\nimport FileBase from 'react-file-base64';\r\n\r\nimport { Button,TextareaAutosize,Grid, TextField  } from \"@material-ui/core\";\r\nexport default function AddEvents(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = React.useState(true);\r\n  let token = localStorage.getItem(\"auth-token\");\r\n  const [title, setTitle] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [venue, setVenue] = useState('');\r\n  const [desc, setDesc] = useState('');\r\n\r\n  const [img, setImg] = useState('');\r\n  const [flag, setShowRequired] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n // const [editorState, setEditorState] = useState(EditorState.createEmpty())\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n    props.setOpenModel(false);\r\n   \r\n  };\r\n  \r\n  const handleAdd = async () => {\r\n   // setOpen(false);\r\n    //props.setOpenModel(false);\r\n    setShowRequired(true);\r\n    const isFieldEmpty = [title,date,time,desc].includes(\"\")\r\n    if(!isFieldEmpty){\r\n      let event = {title,date,venue,desc,img,desc,time};\r\n     try {\r\n      await api.addEvent(token,event).then(response =>{\r\n          console.log(response);\r\n          const responseData = _.get(response, 'data.responseData','')\r\n          if(responseData.messages.status === '21'){\r\n          dispatch ({type: 'ADD_EVENTS', payload: responseData.events});\r\n          }\r\n      }).catch(error =>{\r\n        console.log(error.response);\r\n        const responseData = _.get(error.response, 'data.responseData','');\r\n        if(responseData.messages.status === '22'){\r\n          setError(responseData.messages.message)\r\n        }\r\n      })\r\n     } catch (error) {\r\n      setError('something went wrong, please try again.')\r\n     }\r\n  };\r\n  }\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.setOpenModel(false);\r\n   \r\n  };\r\n  return (\r\n\r\n    <Dialog\r\n    open={open} \r\n    onClose={handleClose}\r\n    aria-labelledby=\"form-dialog-title\" \r\n    disableBackdropClick \r\n      >\r\n     <DialogTitle \r\n     id=\"form-dialog-title\" \r\n     style = {{alignSelf:  'center' }}>\r\n     ADD NEW EVENT\r\n     </DialogTitle>\r\n     <div>\r\n    \r\n  <div className = {classes.marginStyle}>\r\n        {error &&   <Alert severity=\"error\"> {error} </Alert>  }\r\n  <form className={classes.root}  autoComplete=\"off\">\r\n  <Grid container spacing={2}>\r\n      <Grid  item xs={12}>\r\n        <TextField \r\n        fullWidth\r\n        required\r\n        FormHelperTextProps={{\r\n          className: classes.helperTextColor\r\n        }}\r\n        type = \"text\"\r\n        id=\"Title\" \r\n        helperText = {flag && validateRequired(title)}\r\n        value = {title}\r\n        onChange={(e) => (setTitle(\r\n            e.target.value\r\n        ))}\r\n        label=\"Title\" />\r\n     </Grid>  \r\n   </Grid>  \r\n\r\n   <Grid container spacing={2}>\r\n   \r\n      <Grid item md={6}>\r\n        <TextField \r\n        required\r\n        fullWidth\r\n        FormHelperTextProps={{\r\n          className: classes.helperTextColor\r\n        }}\r\n        id=\"Date\" \r\n        helperText = {flag && validateRequired(date)}\r\n        onChange={(e) => setDate( e.target.value)}\r\n        value = {date}\r\n        type=\"date\" \r\n       \r\n        InputProps={{ inputProps: { max: \"2021-05-29\" }}}\r\n        label=\"Event Date\" />\r\n   \r\n      </Grid> \r\n      \r\n     <Grid item md={6}>\r\n        <TextField \r\n        required\r\n        fullWidth\r\n        FormHelperTextProps={{\r\n          className: classes.helperTextColor\r\n        }}\r\n        type = \"time\"\r\n        helperText = {flag && validateRequired(date)}\r\n        id=\"Event Time\" \r\n        onChange={(e) => setTime( e.target.value)}\r\n        value = {time}\r\n        label=\"Event Time\" />\r\n     \r\n      </Grid>\r\n    </Grid>\r\n    <Grid container >\r\n     <Grid>\r\n    \r\n        <TextField \r\n        required\r\n        fullWidth\r\n        FormHelperTextProps={{\r\n          className: classes.helperTextColor\r\n        }}\r\n        id=\"Venue\" \r\n        type = \"text\"\r\n        helperText = {flag && validateRequired(venue)}\r\n        onChange={(e) => setVenue( e.target.value)}\r\n        value = {venue}\r\n        label=\"Venue\" />\r\n     </Grid>  \r\n     <Grid container spacing={2}>\r\n      <Grid  item xs={12}> \r\n     <div className={classes.fileInput}>\r\n       <FileBase type=\"file\" multiple={false} onDone={({base64}) =>setImg({base64})} />\r\n       </div>\r\n       </Grid>\r\n       </Grid>\r\n     </Grid>\r\n     <Grid container>\r\n\r\n  {/* <div className = {classes.textEditor} >\r\n     <Editor\r\n   \r\n    editorState={editorState}\r\n    toolbarClassName=\"toolbarClassName\"\r\n    wrapperClassName=\"wrapperClassName\"\r\n    editorClassName=\"editorClassName\"\r\n    onEditorStateChange={(editorState) => setEditorState(editorState)}\r\n    />\r\n  </div> */}\r\n    <Grid  className=\"editor\">\r\n    <TextareaAutosize \r\n     onChange={(e) => setDesc( e.target.value)}\r\n      value = {desc } \r\n    className = {classes.textAreaStyle}\r\n    aria-label=\"minimum height\" \r\n    rowsMin={10} placeholder=\"Description\" />\r\n    </Grid>\r\n    \r\n      </Grid>\r\n  </form>\r\n  </div>\r\n \r\n  </div>\r\n  <DialogActions>\r\n          <Button size = \"small\" variant= \"contained\" onClick={handleCancel} color=\"primary\">\r\n            cancel\r\n          </Button>\r\n          <Button size = \"small\" variant= \"contained\" onClick={handleAdd} color=\"primary\" autoFocus>\r\n            Add \r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n  )\r\n}\r\n","H:\\Projects\\Dashboard\\EmployeePortal\\client\\src\\components\\Employees\\Constants\\departmentList.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":11,"column":24,"nodeType":"150","messageId":"151","endLine":11,"endColumn":34},{"ruleId":"148","severity":1,"message":"152","line":32,"column":13,"nodeType":"150","messageId":"151","endLine":32,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":1,"column":1,"nodeType":"155","endLine":28,"endColumn":2},{"ruleId":"148","severity":1,"message":"156","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":9},{"ruleId":"153","severity":1,"message":"154","line":1,"column":1,"nodeType":"155","endLine":18,"endColumn":2},{"ruleId":"157","severity":1,"message":"158","line":58,"column":8,"nodeType":"159","endLine":58,"endColumn":32,"suggestions":"160"},{"ruleId":"148","severity":1,"message":"161","line":1,"column":25,"nodeType":"150","messageId":"151","endLine":1,"endColumn":34},{"ruleId":"148","severity":1,"message":"162","line":1,"column":35,"nodeType":"150","messageId":"151","endLine":1,"endColumn":41},{"ruleId":"148","severity":1,"message":"163","line":21,"column":8,"nodeType":"150","messageId":"151","endLine":21,"endColumn":18},{"ruleId":"148","severity":1,"message":"164","line":22,"column":8,"nodeType":"150","messageId":"151","endLine":22,"endColumn":20},{"ruleId":"148","severity":1,"message":"165","line":3,"column":30,"nodeType":"150","messageId":"151","endLine":3,"endColumn":43},{"ruleId":"166","severity":1,"message":"167","line":41,"column":46,"nodeType":"168","messageId":"169","endLine":41,"endColumn":50},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'getProfile' is defined but never used.","Identifier","unusedVar","'tokenRes' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'_' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'setEmployeeData', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["172"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'editButton' is assigned a value but never used.","'deleteButton' is assigned a value but never used.","'DialogContent' is defined but never used.","no-dupe-keys","Duplicate key 'desc'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [history, loggedIn, messageStatus, setEmployeeData, state]",{"range":"175","text":"176"},[2193,2217],"[history, loggedIn, messageStatus, setEmployeeData, state]"]